// –°—Ç—Ä–æ—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã:	
	const text = "13.3";
	
	console.log(parseInt(text));   // –í–µ—Ä–Ω–µ—Ç 13 (–ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å—Å—è number)	
	console.log(parseFloat(text)); // –í–µ—Ä–Ω–µ—Ç 13.3 (–ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å—Å—è number)
	
	
// –°–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤:	
	const objectName = {
		name: "Alex",
		age:  13
	};
	
	console.log(Object.keys(objectName)); // –í–µ—Ä–Ω–µ—Ç –º–∞—Å—Å–∏–≤ ['Alex', 13] –¥–ª—è —Ç–æ–≥–ª–∞ —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –ø–æ–¥—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤–æ–π—Å—Ç–≤ –≤ –æ–±—ä–µ–∫—Ç–µ —Å –ø–æ–º–æ—â—å—é .length
	
	
	const cloneObjectName = Object.assign(objectName, {country: "USA"}); // –°–æ–∑–¥–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—ä–µ–∫—Ç objectName –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç —Å–≤–æ–π—Å—Ç–≤–æ country: "USA" 
                                                                       // –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å Object.assign({}, objectName) –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å–Ω—É—é –∫–æ–ø–∏—é.
	console.log(cloneObjectName); // –í—ã–≤–µ–¥–µ—Ç {name: "Alex", "age": 13, "country": "USA"}

	const globalCloneObjectName = JSON.parse(JSON.stringify(objectName));// –°–æ–∑–¥–∞–µ—Ç –≥–ª—É–±–æ–∫—É—é –∫–æ–ø–∏—é –æ–±—ä–µ–∫—Ç–∞ objectName
	globalCloneObjectName.age = 55;	
	console.log(globalCloneObjectName);
	console.log(objectName);


// –°–≤–æ–π—Å—Ç–≤–∞:

	// –°–≤–æ–π—Å—Ç–≤–∞ document, window –∏ screen
	console.log(document.documentElement.clientWidth);             // –í–æ–∑–≤—Ä–∞—à–∞–µ—Ç —à–∏—Ä–∏–Ω—É —ç–ª–µ–º–µ–Ω—Ç–∞ (—Å padding, –±–µ–∑ –ø–æ–ª–æ—Å—ã –ø—Ä–æ–∫—Ä—É—Ç–∫–∏)
	console.log(document.documentElement.clientHeight);            // –í–æ–∑–≤—Ä–∞—à–∞–µ—Ç –≤—ã—Å–æ—Ç—É —ç–ª–µ–º–µ–Ω—Ç–∞ (—Å padding, –±–µ–∑ –ø–æ–ª–æ—Å—ã –ø—Ä–æ–∫—Ä—É—Ç–∫–∏)

	console.log(document.documentElement.offsetWidth);             // –í–æ–∑–≤—Ä–∞—à–∞–µ—Ç —à–∏—Ä–∏–Ω—É —ç–ª–µ–º–µ–Ω—Ç–∞ c —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –æ—Ç—Å—Ç—É–ø–æ–≤ –∏ –ø–æ–ª–æ—Å—ã –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
	console.log(document.documentElement.offsetHeight);            // –í–æ–∑–≤—Ä–∞—à–∞–µ—Ç –≤—ã—Å–æ—Ç—É —ç–ª–µ–º–µ–Ω—Ç–∞ c —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –æ—Ç—Å—Ç—É–ø–æ–≤ –∏ –ø–æ–ª–æ—Å—ã –ø—Ä–æ–∫—Ä—É—Ç–∫–∏

	console.log(document.documentElement.scrollLeft);              // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –±—ã–ª–æ –ø—Ä–æ—Å–∫—Ä–æ–ª–µ–Ω–æ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ –≤ –ø–∏–∫—Å–µ–ª—è—Ö
	console.log(document.documentElement.scrollTop);               // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –±—ã–ª–æ –ø—Ä–æ—Å–∫—Ä–æ–ª–µ–Ω–æ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ –≤ –ø–∏–∫—Å–µ–ª—è—Ö
	console.log(window.pageXOffset);              								 // –ê–Ω–∞–ª–æ–≥ scrollLeft —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π —Ö—Ä–æ–º–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å window)
	console.log(window.pageYOffset);               								 // –ê–Ω–∞–ª–æ–≥ scrollTop —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π —Ö—Ä–æ–º–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å window)

	console.log(document.documentElement.getBoundingClientRect()); // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å–æ –≤—Å–µ–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏

	window.scrollBy(10, 400); 																		 // –°–∫—Ä–æ–ª–∏—Ç –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–æ –æ—Å–∏ X –Ω–∞ 10px –∏ –ø–æ –æ—Å–∏ Y 400px 
	window.scrollTo(10, 400); 																		 // –°–∫—Ä–æ–ª–∏—Ç –æ—Ç –ø–æ–ª–æ–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –∞ –Ω–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–æ –æ—Å–∏ X –Ω–∞ 10px –∏ –ø–æ –æ—Å–∏ Y 400px 
	

// –ú–µ—Ç–æ–¥—ã:	
	console.dir(objectName); 																			 // –ü–æ–∑–≤–æ–ª—è–µ—Ç —É–≤–∏–¥–µ—Ç—å –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞
	console.log(document.querySelector('.btn').matches('.black')); // –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ —É —ç–ª–µ–º–µ–Ω—Ç–∞ .btn –∫–ª–∞—Å—Å .black

	console.log(window.getComputedStyle(document.body));           // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Ç–∏–ª–µ–π —ç–ª–µ–º–µ–Ω—Ç–∞ (—Å—Ç–∏–ª–∏ –∏–¥—É—Ç –∏–∑ css –Ω–µ —É—á–∏—Ç–∏—ã–≤–∞–µ—Ç –∏–Ω–ª–∞–π–Ω–æ–≤—ã–µ)
	console.log(window.getComputedStyle(document.body, ":after")); // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Ç–∏–ª–µ–π –ø—Å–µ–≤–¥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
	
	let iSec = 1;
	function timeOutFunc () {
		if(iSec <= 5) {
			console.log(`Time out text is worked ${iSec} times`);
			iSec++;
		} else {
			console.log(`Timer stopped after ${iSec} second`);
			clearInterval (timeInterval);															// –ü—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ –≤—É–Ω–∫—Ü–∏–∏ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
		}	
	}
	const timeInterval = setInterval(timeOutFunc, 1000);					// –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º

	const timeOutStart = setTimeout(() => {												// –°—Ç–∞—Ä—Ç —Ç–∞–π–º–µ—Ä–∞
		console.log('Timer has worked');			
	}, 3000);
	clearTimeout(timeOutStart);																		// –ü—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ —Ç–∞–π–º–∞—É—Ç–∞


// –§—É–Ω–∫—Ü–∏—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä (—Ç–æ–∂–µ —Å–∞–º–æ–µ —á—Ç–æ –∏ –∫–ª–∞—Å—Å—ã –Ω–æ –ø–æ—Å—Ç–∞—Ä–æ–º—É)
	function User(name, id) {                          				// –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
		this.name  = name;
		this.id    = id;
		this.human = true;
		this.hello = () => {
			console.log(`${this.name} says "Hello!"`);
		};
	}

	User.prototype.exit = function() {
		console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${this.name} –≤—ã—à–µ–ª`); 				// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
	};

	const alex = new User('Alex', 1);                  			  // –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Å –ø–æ–º–æ—â—å —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
	const kristina = new User('Kristina', 2);

	console.log(alex);
	console.log(kristina);

	alex.exit();                                       			  // –í—ã–≤–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞
	alex.open();


// –ö–ª–∞—Å—Å—ã
	class Rectangle {               // –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ (–∫–æ–Ω—Ü–µ–ø—Ü–∏—è)
		constructor(height, width) {  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ 
			this.height = height;
			this.width = width;
		}                             

		calcArea() {                  // –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏/–º–µ—Ç–æ–¥–∞ (–Ω–µ –Ω—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å —Å–ª–æ–≤–æ function)
			return this.height * this.width;
		}
	}

	class ColoredRectangleWithText extends Rectangle { // –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Å–ª–µ–¥—É–µ—Ç –≤—Å–µ –º–µ—Ç–æ–¥—ã –∏ —Å–≤–æ–π—Å—Ç–≤–∞ –∫–ª–∞—Å—Å–∞ Rectangle
		constructor(height, width, text, bgColor) {      // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∞—Ä–≥—É–º–µ–Ω—Ç—ã –Ω–∞—Å–ª–µ–¥—É–µ–º–æ–≥–æ
			super(height, width);                          // –í—ã–∑—ã–≤–∞–µ—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –Ω–∞—Å–ª–µ–¥—É–µ–º–æ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è (Rectangle), –≤–Ω—É—Ç—Ä–∏ –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å. super() –≤—Å–µ–≥–¥–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ –ø–µ—Ä–≤–æ–º –º–µ—Å—Ç–µ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
			this.text = text;
			this.bgColor = bgColor;
		}

		showMyProps() {
			console.log(`–¢–µ–∫—Å—Ç: ${this.text}, —Ü–≤–µ—Ç: ${this.bgColor}`);
		}
	}
	const square = new Rectangle(10, 10); // (—ç–∫–∑–µ–º–ø–ª—è—Ä)
	console.log(square.calcArea());

	const block = new ColoredRectangleWithText(10, 10, 'Hi', 'red');
	block.showMyProps();
	console.log(block.calcArea());


// –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–∑–æ–≤–∞ this
	function showThis1() {
		console.log(this);      // –¢–∞–∫–æ–π —Å–ø–æ—Å–æ–± this –≤–µ—Ä–Ω–µ—Ç –æ–±—ä–µ–∫—Ç window, –∞ –ø—Ä–∏ "use strict" –≤–µ—Ä–Ω–µ—Ç undefined
	}
	showThis1();
	// ------------

	const obj = {
		a: 20,
		b: 15,
		sum: function() {
			console.log(this);    // –í—ã–∑–æ–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (this) –≤–Ω—É—Ç—Ä–∏ –º–µ—Ç–æ–¥–∞ –æ–±—ä–µ–∫—Ç–∞, –±—É–¥–µ—Ç —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ —Å–∞–º –æ–±—ä–µ–∫—Ç –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è

			function shout() {
				console.log(this);  // –í–µ—Ä–Ω–µ—Ç udefined –∏–ª–∏ –æ–±—ä–µ–∫—Ç window, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–Ω—É—Ç—Ä–∏ –º–µ—Ç–æ–¥–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–µ—Ç–æ–¥–æ–º –æ–±—ä–µ–∫—Ç–∞, —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è
			}
			shout();

			const boom = () => console.log(this); // –°—Å—ã–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –∏–º–µ–µ—Ç —Å–≤–æ–µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Ç—Å–∞ –≤—ã–∑–æ–≤–∞,
																						// –æ–Ω–∞ –±—É–¥–µ—Ç –±—Ä–∞—Ç—å –µ–≥–æ —É —Å–≤–æ–µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ "obj") –∏ –±—É–¥–µ—Ç —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ –Ω–µ–≥–æ
			boom();
		}
	};  
	obj.sum();            
	// ------------

	function User(name, id) {                         
		this.name  = name;
		this.id    = id;
		this.human = true;
		this.hello = function() {
			console.log(`${this.name} says "Hello!"`); // this –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞—Ö –∏ –∫–ª–∞—Å—Å–∞—Ö —ç—Ç–æ –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—ä–µ–∫—Ç–∞
		};
	}
	const bill = new User('Bill', 26);
	bill.hello();
	// ------------

	function sayName (surname, age) {
		console.log(this);
		console.log(`${this.name} ${surname}, –µ–º—É ${age} –ª–µ—Ç`);
	}
	const user = {
		name: 'Paul'
	};
	sayName.call(user, 'Smith', 34);              // –ü—Ä–∏—Å–≤–∞–µ–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –æ–±—ä–µ–∫—Ç—É
	sayName.apply(user, ['Robenson', '52']);      // –ü—Ä–∏—Å–≤–∞–µ–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –æ–±—ä–µ–∫—Ç—É
	// üëÜ–†–∞–±–æ—Ç–∞—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ, —Ä–∞–∑–Ω–∏—Ü–∞ —Ç–æ–ª—å–∫–æ –≤ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞—Ö
	// ------------

	function count(num, a, b) {
		const result = a + b;
		return `${this*num} || result = ${result}`;
	}
																								// bind —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏ –ø–æ–¥ –Ω–µ–µ –ø–æ–¥–≤—è–∑—ã–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Ç—Å
	const bindingFunc1 = count.bind(2, 5, 10, 2); // –ü–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è this –∏ –±–∞–π–Ω–¥–∏—Ç—å—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞
																								// this = 2, num = 5, a = 10, b = 2
																								
	console.log(bindingFunc1());                  // –í–µ—Ä–Ω–µ—Ç "10 || result = 12"                     

	const bindingFunc2 = count.bind(3);
	console.log(bindingFunc2(1, 2, 3));           // –í–µ—Ä–Ω–µ—Ç "3 || result = 5"
	console.log(bindingFunc2(3));                 // –í–µ—Ä–Ω–µ—Ç "3 || result = NaN"
// ------------		


// –¶–∏–∫–ª—ã: 	
	for (let key in objectName) {					   			             // "in" - –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –æ–±—ä–µ–∫—Ç—ã, –∞ "of" - –º–∞—Å—Å–∏–≤—ã	
		console.log(`–ö–ª—é—á—å ${key} –∑–Ω–∞—á–µ–Ω–∏–µ ${objectName[key]}`); // –í–µ—Ä–Ω–µ—Ç: "–ö–ª—é—á—å name –∑–Ω–∞—á–µ–Ω–∏–µ Alex"																                             
	}
	
	const numbers = [2,3,4,8];	
	numbers.forEach(function(item, key, arr) {                 // –ü—Ä–∏–Ω–µ–º–∞–µ—Ç 3 –∞—Ä–≥—É–º–µ–Ω—Ç–∞: 1 - –∑–Ω–∞—á–µ–Ω–∏–µ, 2 - –∫–ª—é—á, —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–∞—Å—Å–∏–≤–∞ (–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –æ–±—ä–µ–∫—Ç–∞–º–∏)
		console.log(`${item} : ${key} –≤–Ω—É—Ç—Ä–∏ –º–∞—Å—Å–∏–≤–∞ ${arr}`);
	});
	
	
// –û–ø–µ—Ä–∞—Ç–æ—Ä—ã:	
	const nameObject = {
		name1: "Vanya",
		name2: "Sanya",
		name3: "Vovka"
	};	
	console.log(nameObject); // { name1: 'Vanya', name2: 'Sanya', name3: 'Vovka' }
	
	delete nameObject.name3; // –£–¥–∞–ª–∏—Ç name3 —É –æ–±—ä–µ–∫—Ç–∞ nameOgject
	
	console.log(nameObject); // { name1: 'Vanya', name2: 'Sanya' }	
	//------------
	
	console.log(2 && 1 && null && 0 && undefined); // && - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –Ω–∞ false, –∞ || –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –Ω–∞ true	
	//------------
	
	let a = 1;	
	a = a + 1; // 2
	a += 1; 	 // 3	
	//------------
	
	
// –ù–æ–≤—ã–µ —Ñ–∏—à–∫–∏ JS es6 –∏ –≤—ã—à–µ
	// –û–ø–µ—Ä–∞—Ç–æ—Ä—ã
	const video = ['youtube', 'vimeo', 'pornhub'],
	blogs = ['wordpress', 'livejournal', 'blogger'],
	internet = [...video, ...blogs, 'instagram']; // ... - spret –æ–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤—ã –∏ –æ–±—ä–µ–∫—Ç—ã
	console.log(internet); // –í–µ—Ä–Ω–µ—Ç [ 'youtube', 'vimeo', 'pornhub', 'wordpress', 'livejournal', 'blogger', 'instagram' ]
	//--------------------
	const picture = (a, b, ...rest) => { // ... - rest –æ–ø–µ—Ä–∞—Ç–æ—Ä –ø–æ–º–µ—â–∞–µ—Ç –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –º–∞—Å—Å–∏–≤, –¥–∞–∂–µ –µ—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ —É–∫–∞–∑–∞–Ω, –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ (–≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö rest –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è)
		return console.log(a, b, rest);
	};
	picture('paint', 'photoshop', 'illustrator', 'bulocka', 'cruasanchik'); // –ü—Ä–∏ spret –æ–ø–µ—Ä–∞—Ç–æ—Ä–µ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å —Å–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –≤ –º–∞—Å—Å–∏–≤
	//--------------------

	// –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
	console.log(2 ** 3); // 2 –≤ 3-–∏–π —Å—Ç–µ–ø–µ–Ω–∏ (8). –î–æ—Å—Ç—É–ø–Ω–æ —Å –≤–µ—Ä—Å–∏–∏ es7
	
	a = 1;
	let b = 1;

	console.log(!!(a && b)); // !! - –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –≤ –±—É–ª–µ–≤—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
	console.log((a && b));	 
	//--------------------

	console.log(typeof +"12"); // + –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ–≤–æ–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
	//--------------------

	// –§—É–Ω–∫—Ü–∏–∏
	const arrowsFunction = () => { 	// –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
		return "Hello World!";
	};
	console.log(arrowsFunction());

	const miniFunc1 = a => console.log(`Mini function 1 has an argument ${a}`); 		 // –ö–æ—Ä–æ—Ç–∫–∞—è –∑–∞–ø–∏—Å—å —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ —á—Ç–æ –µ—Å—Ç—å 1 –∞—Ä–≥—É–º–µ–Ω—Ç
	const miniFunc2 = () => console.log("Mini function 2 doesn't have an argument"); // –ö–æ—Ä–æ—Ç–∫–∞—è –∑–∞–ø–∏—Å—å —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
	miniFunc1('Puppy');
	miniFunc2();
	//--------------------
	function plus () {

	}
	//--------------------
		
	// –ü—Ä–æ—Ç–æ—Ç–∏–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
	const soldier = {
	  health: 400,
	  armor: 100,
	  sayHello: () => {
		  console.log("Hello!");
	  }
	};

	// const john = {
	//   helth: 100,
	//   lifes: 3
	// };
	// john.__proto__ = soldier; // –°—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–± —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –æ–±—ä–µ–∫—Ç—É

	// Object.setPrototypeOf(john, soldier); // –ù–æ–≤—ã–π —Å–ø–æ—Å–æ–± —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –æ–±—ä–µ–∫—Ç—É

	const john = Object.create(soldier); // –°–æ–∑–¥–∞–Ω–∏–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞ –∫ –Ω–æ–≤–æ–º—É –æ–±—ä–µ–∫—Ç—É

	john.helth = 100;
	john.lifes = 3;

	console.log(Object.getPrototypeOf(john)); // –í–µ—Ä–Ω–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ç–æ—Ç–∏–ø soldier

	console.log(john.armor);
	//--------------------
	
// –î–µ–π—Å—Ç–≤–∏—è —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ	
	const box     = document.getElementById('box'),
        circles = document.querySelectorAll('.circles'),
        hearts  = document.querySelectorAll('.hearts'),
        wrapper = document.querySelector('.hearts');

	box.style.backgroundColor = 'orange';                     // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–ª–∞–π–Ω–æ–≤—ã—Ö —Å—Ç–∏–ª–µ–π
	box.style.cssText = "width: 250px; border-radius: 5px";   // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏

	const div  = document.createElement('div');               // –°–æ–∑–¥–∞–Ω–∏–µ –±–ª–æ–∫–∞
	const textHello = document.createTextNode('Hello World'); // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫–∞—Ç–∞ (–±–µ–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞)
	div.classList.add('black');                               // –î–æ–±–∞–≤–ª—è–µ—Ç –∫–ª–∞—Å—Å 'black'
	div.className('container div');                           // –î–æ–±–∞–≤–ª—è–µ—Ç –∫–ª–∞—Å—Å 'container' –∏ 'div' (—Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±)

	wrapper.append(div);                                      // –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π div –≤ –Ω–∞—á–∞–ª–æ wrapper
	wrapper.appendChild(div);                                 // –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π div –≤ –Ω–∞—á–∞–ª–æ wrapper (—Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±)
	wrapper.prepend(div);                                     // –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π div –≤ –∫–æ–Ω–µ—Ü wrapper
	wrapper.prependChild(div);                                // –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π div –≤ –∫–æ–Ω–µ—Ü wrapper (—Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±)

	hearts[1].before(div);                                    // –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π div –ø–µ—Ä–µ–¥ –≤—Ç–æ—Ä—ã–º –µ–ª–µ–º–µ–Ω—Ç–æ–º hearts
	hearts[1].after(div);                                     // –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π div –ø–æ—Å–ª–µ –≤—Ç–æ—Ä–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ hearts
	wrapper.insertBefore(div, hearts[1]);                     // –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π div –ø–µ—Ä–µ–¥ –≤—Ç–æ—Ä—ã–º –µ–ª–µ–º–µ–Ω—Ç–æ–º hearts (—Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±)

	hearts[2].remove();                                       // –£–¥–∞–ª—è–µ—Ç —É–∑–µ–ª hearts[2] –∏–∑ –¥–µ—Ä–µ–≤–∞ DOM
	wrapper.removeChild(hearts[2]);                           // –£–¥–∞–ª—è–µ—Ç —É–∑–µ–ª hearts[2] –∏–∑ –¥–µ—Ä–µ–≤–∞ DOM (—Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±)

	hearts[3].replaceWith(circles[0]);                      // –ó–∞–º–µ–Ω—è–µ—Ç –≤—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç hearts –Ω–∞ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç circles
	wrapper.replaceChild(circles[0], hearts[3]);            // –ó–∞–º–µ–Ω—è–µ—Ç –≤—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç hearts –Ω–∞ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç circles (—Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±)

	div.textContent = "Hello";                              // –î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤ div

	div.insertAdjacentHTML('beforebegin', '<div><h2>Hello</h2></div'); // –î–æ–±–∞–≤–ª—è–µ—Ç html —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–µ—Ä–µ–¥ div 
	div.insertAdjacentHTML('afterbegin', '<div><h2>Hello</h2></div');  // –î–æ–±–∞–≤–ª—è–µ—Ç html —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤ –Ω–∞—á–∞–ª–æ div
	div.insertAdjacentHTML('beforeend', '<div><h2>Hello</h2></div');   // –î–æ–±–∞–≤–ª—è–µ—Ç html —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤ –∫–æ–Ω–µ—Ü div
	div.insertAdjacentHTML('afterend', '<div><h2>Hello</h2></div');    // –î–æ–±–∞–≤–ª—è–µ—Ç html —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ—Å–ª–µ div
	//--------------------
  
  console.log(document.head);                                                   // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ head
  console.log(document.documentElement);                                        // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ html 
  console.log(document.body.childNodes);                                        // –û–±—Ä–∞—â–∞–µ—Ç—Å—è –∫–æ –≤—Å–µ–º —É–∑–ª–∞–º body (—Ä–æ–¥–∏—Ç–µ–ª—å) (.childElements –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ js) 
  console.log(document.body.firstChild);                                        // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ø–µ—Ä–≤–æ–º—É —Ä–µ–±–µ–Ω–∫—É (–º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–º —É–∑–ª–æ–º)
  console.log(document.body.firstElementChild);                                 // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ø–µ—Ä–≤–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
  console.log(document.body.lastChild);                                         // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Ä–µ–±–µ–Ω–∫—É (–º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–º —É–∑–ª–æ–º)
  console.log(document.body.lastElementChild);                                  // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É

  console.log(document.querySelector('p').parentNode.parentNode);               // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ —Ä–æ–¥–∏—Ç–µ–ª—é –∏ –µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—é (–º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–º —É–∑–ª–æ–º)
  console.log(document.querySelector('p').parentElement);                       // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ —Ä–æ–¥–∏—Ç–∏—Ç–µ–ª—å—Å–∫–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É

  console.log(document.querySelector('[data-current="3"]'));                    // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –∞—Ç—Ä–∏–±—É—Ç—É
  console.log(document.querySelector('[data-current="3"]').nextSibling);        // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å–µ–¥—É (–º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–º —É–∑–ª–æ–º)
  console.log(document.querySelector('[data-current="3"]').nextElementSibling); // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å–µ–¥–Ω–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É

  let childElements = [];

  for (let key of document.body.childNodes) {                                   // –í—ã–±–æ—Ä–∫–∞ –¥–ª—è –µ–ª–µ–º–µ–Ω—Ç–æ–≤ –≤–º–µ—Å—Ç–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ—Å—è –º–µ—Ç–æ–¥–∞ .childElements
    if (key.nodeName == "#text") {
        continue;
    }
    
    childElements.push(key);
  }

  console.log(childElements);
	//--------------------


//–°–æ–±—ã—Ç–∏—è
	document.addEventListener('DOMContentLoaded', (e) => { // –ó–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–¥, –∫–æ–≥–¥–∞ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è DOM
		console.log('Hello World!');
		console.log(e.touches);				// –°–≤–æ–π—Å—Ç–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–∞–ª—å—Ü–µ–≤,
																	// –∫–æ—Ç–æ—Ä—ã–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç —Å —ç–∫—Ä–∞–Ω–æ–º (–≤ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –≥–¥–µ –æ–Ω–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è).
																	// (–ø–∞–ª—å—Ü—ã –∫–æ—Ç–æ—Ä—ã–µ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ª–µ–∂–∞—Ç –Ω–∞ —Å–µ–Ω—Å–µ—Ä–Ω–æ–º –¥–∏—Å–ø–ª–µ–µ)
		
		console.log(e.targetTouches); // –°–≤–æ–π—Å—Ç–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–∞–ª—å—Ü–µ–≤,
																	// –≤–∑—è–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º.  														

		console.log(e.changedTouches);// –°–≤–æ–π—Å—Ç–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–∞–ª—å—Ü–µ–≤ (–∏ –≤—Ä–æ–¥–µ –¥–µ–π—Å—Ç–≤–∏–π),
																	// –∫–æ—Ç–æ—Ä—ã–µ —É—á–∞–≤—Å—Ç–≤—É—é—Ç –∏ —É—á–∞–≤—Å—Ç–≤–æ–≤–∞–ª–∏ –≤–æ –≤—Ä–µ–º—è —Å–æ–±—ã—Ç–∏—è
	});

	let i = 0;
	const showHello = e => {
		if (i >= 2) {
			document.body.removeEventListener('click', showHello); // –£–¥–∞–ª—è–µ—Ç —Å–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞
		} else {
			console.log(`Hello ${i}`);
		}
		i++;
	};
	document.body.addEventListener('click', showHello); // –ù–∞–∑–Ω–∞—á–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç body

	//–ú–æ–±–∏–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
	const testBtn = document.createElement("<button type='button'>Test btn</button>");

	testBtn.addEventListener('touchstart', () => {	// –¢–∞–ø –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É
		console.log('touchstart');			
	});

	testBtn.addEventListener('touchend', () => {		// –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å—Ä–∞–∑—É –∂–µ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏–µ —Ç–∞–ø–∞
		console.log('touchend');
	});

	testBtn.addEventListener('touchmove', () => {		// –î–≤–∏–∂–µ–Ω–∏–µ –ø–∞–ª—å—Ü–∞ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É
		console.log('touchmove');
	});

	testBtn.addEventListener('touchenter', () => {	// –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø–∞–ª–µ—Ü –ø—Ä–æ—Å–∫–æ–ª—å–∑–∏—Ç –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç 
		console.log('touchenter');
	});

	testBtn.addEventListener('touchleave', () => {  // –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–≥–¥–∞ –ø–∞–ª–µ—Ü —Å–æ—à–µ–ª —Å —ç–ª–µ–º–µ–Ω—Ç–∞ 
		console.log('touchleave');
	});

	testBtn.addEventListener('touchcancel', () => { // –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –ø–∞–ª–µ—Ü –≤—ã—à–µ–ª –∑–∞–ø—Ä–µ–¥–µ–ª –¥–∏—Å–ø–ª–µ—è
		console.log('touchcancel');
	});
	//--------------------


// AJAX –º–µ—Ç–æ–¥—ã
const objForAjax = {
	name: "Cris",
	age: 18
};
const jsonObj = JSON.stringify(objForAjax);

console.log(jsonObj); // –ü—Ä–µ–∞–±—Ä–∞–∑—É–µ—Ç –æ–±—ä–µ–∫—Ç –≤ JSON –æ–±—ä–µ–∫—Ç
console.log(JSON.parse(jsonObj)); // –ü—Ä–µ–∞–±—Ä–∞–∑—É–µ—Ç JSON –æ–±—ä–µ–∫—Ç –≤ –æ–±—ä–µ–∫—Ç javascript
//--------------------

// –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ AJAX
  // –ü–µ—Ä–≤—ã–π —Å–ø–æ—Å–æ–±
  const inputRub = document.querySelector('#rub'),
        inputUsd = document.querySelector('#usd');

  inputRub.addEventListener('input', () => {
    const request = new XMLHttpRequest();                                          // –ú–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ JSON
    // request.open(method, url, async, login, pass);                              // .open - –º–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π —Å–æ–±–∏—Ä–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    request.open('GET', 'js/current.json');
    request.setRequestHeader('Content-type', 'application/json', 'charset=utf-8'); // –ó–∞–ø—Ä–æ—Å –Ω–∞ http –∑–∞–≥–æ–ª–æ–≤–∫–∏
    request.send();                                                                // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è POST –∑–∞–ø—Ä–æ—Å, —Ç–æ –≤ —Å–∫–æ–±–∫–∞—Ö –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–ø—Ä–æ—Å–∞

    // request.addEventListener('readystatechange', () => {                        // –°–æ–±—ã—Ç–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –≥–æ—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç (—Å—Ä–∞–±–∞—Ç—ã–≤–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑)
    // if (request.readyState === 4 && request.status === 200) {                   

    request.addEventListener('load', () => {                                       // –°–æ–±—ã—Ç–∏–µ –∫–æ—Ç–æ—Ä–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–≥–¥–∞ –∑–∞–ø—Ä–æ—Å –≥–æ—Ç–æ–≤
      if (request.status === 200) {
        const data = JSON.parse(request.response);
        inputUsd.value = (+inputRub.value / +data.current.usd).toFixed(2);
      } else {
        inputUsd.value = request.statusText;
      }
    });
    // status - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∑–∞–ø—Ä–æ—Å–∞ (200 - 500)
    // statusText - –¢–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (ok, not found)
    // readyState - –°–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ (0 - 4)
    // response - –°–æ–¥–µ—Ä–∂–∏—Ç –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
  });


//JS –∞—Ç—Ä–∏–±—É—Ç—ã
/*
	<script defer src="script"></script> <!-- defer - –∑–∞–≥—Ä—É–∂–∞–µ—Ç js —Ñ–∞–∏–ª –≤ —Ñ–æ–Ω–µ –∏ –≥–æ–≤–æ—Ä–∏—Ç DOM 
																				—á—Ç–æ–±—ã –æ–Ω–∞ –µ–≥–æ –∑–∞–ø—É—Å—Ç–∏–ª –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
																				(—Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ —Å–æ–±—ã—Ç–∏—è 'DOMContentLoaded')
																				–°–∫—Ä–∏—Ç–ø—ã —Å –∞—Ç—Ä–∏–±—É—Ç–æ–º defer –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ -->

	<script async src="script"></script> <!-- async - –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤ —Ñ–æ–Ω–µ —Ñ–∞–∏–ª, –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç DOM.
																				–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ -->
*/